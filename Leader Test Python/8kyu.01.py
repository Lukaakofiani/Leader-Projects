"""def nearest_sq(n):
    
    root = round(n ** 0.5)
    
    if root * root == n:
        return n
    
    elif (root - 1) * (root - 1) < n:
        return root * root
    
    else:
        return (root - 1) * (root - 1)"""

#ჩვენ def ით შევქმენით ფუნქცია სახელად nearest_sq(n)

#ეს ფუნქცია იღებს ინტეჯერს და აბრუნებს ყველაზე ახლო რიცხვს n-ს

#n ** 0,5 ითვლის n-ის კვადრატულ ფესვს. ** ოპერატორი გამოიყენება ექსპონენტაციისთვის.
#round() არის ჩაშენებული პითონის ფუნქცია, რომელიც ამრგვალებს რიცხვს უახლოეს მთელ რიცხვამდე.
#root არის ცვლადი, რომელიც ინახავს კვადრატული ფესვის გამოთვლის შედეგს, რომელიც დამრგვალებულია უახლოეს მთელ რიცხვამდე.

#თუ ფესვი * root == n:

#root * root ითვლის ფესვის ცვლადის კვადრატს.
#== არის თანასწორობის ოპერატორი, რომელიც ამოწმებს, არის თუ არა გაანგარიშების შედეგი n-ის ტოლი.
#თუ პირობა მართალია, კოდი if ბლოკის შიგნით შესრულდება.

#თუ წინა არის მცდარი.
#(root - 1) * (root - 1) ითვლის ფესვის კვადრატს მინუს ერთი.
#< არის ნაკლები ოპერატორი, რომელიც ამოწმებს, არის თუ არა გაანგარიშების შედეგი n-ზე ნაკლები.
#თუ პირობა მართალია, კოდი elif ბლოკის შიგნით შესრულდება.

#თუ ყველა წინა პირობა მცდარია, ფუნქცია აბრუნებს ფესვის კვადრატს -1s